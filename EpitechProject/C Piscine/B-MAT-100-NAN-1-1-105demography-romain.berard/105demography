#!/usr/bin/python3

import sys, math, csv
from sys import stdin
# from math import factorial, sqrt, exp, pi

filename = "./105demography_data.csv"
years = []

def print_h():
    print("USAGE\n\t./105demography [code]+\n\nDESCRIPTION\n\tcode    country code")

def load_years():
    year = 1960
    while year <= 2017:
        years.append(year)
        year += 1
    return years

def country_loader(file_mem, index):
    countries =[]
    i = 0
    while i < len(file_mem):
        countries.append(file_mem[i][index])
        i+=1
    return countries

def countries_loader(file_mem, index):
    countries =[]
    i = 0
    j = 0
    while i < len(file_mem):
        try:
            index[j]
        except:
            break
        if i == index[j]:
            countries.append(file_mem[i])
            j+=1
        i+=1
    return countries

def csv_loader():
    file_mem = []
    with open(filename, 'r') as csv_file:
        reader = csv.reader(csv_file, delimiter=';')
        next(reader)
        for row in reader:
            file_mem.append(row)
        return file_mem

def compare_country(countries_l, arg, countries_w):
    i = 0
    j = 0
    index = []
    print("Country: ", sep ="", end="")
    while (i < len(countries_l)):
        try:
            arg[j]
        except:
            break
        if arg[j] == countries_l[i] and j == len(arg) -1:
            index.append(i)
            j += 1
            i = 0
        elif arg[j] == countries_l[i]:
            index.append(i)
            j += 1
            i = 0
        i += 1
    index.sort()
    j = 0
    if (len(index) < 0):
        sys.exit(84)
    if (len(index) == 1):
        print(countries_w[index[0]])
        return index
    for j in range (0, len(index) - 1, 1):
        print(countries_w[index[j]], " ", sep=',' , end ="")
    print(countries_w[index[j + 1]])
    return(index)

def countries_total(countries):
    i = 0
    total_countries = [0] * 58
    for i in range(0, len(countries), 1):
        for j in range(2, len(countries[i]), 1):
            total_countries[j - 2] += int(countries[i][j])
    return total_countries

def get_a_b(sums):
    a = ((sums[0] * sums[2]) - (sums[1] * sums[3])) / ((len(years) * sums[2]) - sums[1]**2)
    b = ((len(years) * sums[3]) - (sums[0] * sums[1])) / ((len(years) * sums[2]) - math.pow(sums[1], 2))
    return a, b

def get_sums1(tab):
    sums = [0, 0, 0, 0]

    for i in range(0, len(tab), 1):
        sums[0] += tab[i]
        sums[1] += years[i]
        sums[2] += pow(years[i], 2)
        sums[3] += tab[i] * years[i]
    return sums

def get_sums_2(tab):
    sums = [0, 0, 0, 0]

    for i in range(0, len(tab)):
        sums[0] += years[i]
        sums[1] += tab[i]
        sums[2] += pow(tab[i], 2)
        sums[3] += tab[i] * years[i]
    return sums

def calculate_correlation_coefficient(years, total_countries):
    n = len(years)

    mean_x = sum(years) / n
    mean_y = sum(total_countries) / n

    numerator = sum((years[i] - mean_x) * (total_countries[i] - mean_y) for i in range(n))
    denominator_x = sum((years[i] - mean_x)**2 for i in range(n))
    denominator_y = sum((total_countries[i] - mean_y)**2 for i in range(n))

    correlation_coefficient = numerator / (math.sqrt(denominator_x) * math.sqrt(denominator_y))
    print("Correlation: ", format(correlation_coefficient, ".4f"))

def Fit1(total_countries):
    print("Fit1")
    res = 0
    sums = get_sums1(total_countries)
    a, b = get_a_b(sums)
    if a >= 0:
        print("\tY = ", format(b/1000000, ".2f"), " X + ", format(a/1000000, ".2f"), sep="")
    else:
        print("\tY = ", format(b/1000000, ".2f"), " X - ", format(a/1000000 * -1, ".2f"), sep="")
    for i in range(0, len(total_countries)):
        func = years[i] * b + a
        res += ((func - total_countries[i]) ** 2 / len(total_countries))
    print("\tRoot-mean-square deviation: ", format(math.sqrt(res)/1000000, ".2f"), sep="")
    print("\tPopulation in 2050: ", format((2050 * b + a)/1000000, ".2f"), sep="")

def Fit2(total_countries):
    print("Fit2")
    res = 0
    sums = get_sums_2(total_countries)
    a, b = get_a_b(sums)
    if a >= 0:
        print("\tX = ", format(b*1000000, ".2f"), " Y + ", format(a, ".2f"), sep="")
    else:
        print("\tX = ", format(b*1000000, ".2f"), " Y - ", format(a * -1, ".2f"), sep="")
    for i in range(0, len(total_countries)):
        func = (years[i] - a) / b
        res += ((func - total_countries[i]) ** 2 / len(total_countries))
    print("\tRoot-mean-square deviation: ", format(math.sqrt(res)/1000000, ".2f"), sep="")
    print("\tPopulation in 2050: ", format(((2050 - a) / b/1000000), ".2f"), sep="")

def main():
    arg = []
    i = 1
    if (len(sys.argv) == 2 and sys.argv[1] == "-h"):
        print_h()
        sys.exit(0)
    while (i < len(sys.argv)):
        arg.append(sys.argv[i])
        i += 1
    file_mem = csv_loader()
    if len(arg) < 1:
        exit(84)
    countries_letters = country_loader(file_mem, 1)
    countries_words = country_loader(file_mem, 0)
    index = compare_country(countries_letters, arg, countries_words)
    countries = countries_loader(file_mem, index)
    years = load_years()
    total_countries = countries_total(countries)
    Fit1(total_countries)
    Fit2(total_countries)
    calculate_correlation_coefficient(years, total_countries)

main()
